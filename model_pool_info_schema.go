/*
ston-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PoolInfoSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolInfoSchema{}

// PoolInfoSchema struct for PoolInfoSchema
type PoolInfoSchema struct {
	// Address of pool
	Address string `json:"address"`
	// Annual percentage yield on the last day
	Apy1d NullableString `json:"apy_1d,omitempty"`
	// Annual percentage yield on the last month
	Apy30d NullableString `json:"apy_30d,omitempty"`
	// Annual percentage yield on the last week
	Apy7d NullableString `json:"apy_7d,omitempty"`
	// Protocol fee collected in token0
	CollectedToken0ProtocolFee string `json:"collected_token0_protocol_fee"`
	// Protocol fee collected in token1
	CollectedToken1ProtocolFee string `json:"collected_token1_protocol_fee"`
	// Pool is deprecated
	Deprecated bool `json:"deprecated"`
	// Account address of liquidity pool tokens
	LpAccountAddress NullableString `json:"lp_account_address,omitempty"`
	// Balance of liquidity pool tokens
	LpBalance NullableString `json:"lp_balance,omitempty"`
	// Fee of liquidity pool token
	LpFee string `json:"lp_fee"`
	// Price of liquidity pool token in USD
	LpPriceUsd NullableString `json:"lp_price_usd,omitempty"`
	// Total supply of liquidity pool tokens
	LpTotalSupply string `json:"lp_total_supply"`
	// Total supply of liquidity pool tokens in USD
	LpTotalSupplyUsd NullableString `json:"lp_total_supply_usd,omitempty"`
	// Wallet address of liquidity pool tokens
	LpWalletAddress NullableString `json:"lp_wallet_address,omitempty"`
	// Fee of protocol
	ProtocolFee string `json:"protocol_fee"`
	// Address of protocol fee
	ProtocolFeeAddress string `json:"protocol_fee_address"`
	// Referral fee
	RefFee string `json:"ref_fee"`
	// Reserve of token0 in pool
	Reserve0 string `json:"reserve0"`
	// Reserve of token1 in pool
	Reserve1 string `json:"reserve1"`
	// Address of router
	RouterAddress string `json:"router_address"`
	// Address of token0
	Token0Address string `json:"token0_address"`
	// Balance of token0
	Token0Balance NullableString `json:"token0_balance,omitempty"`
	// Address of token1
	Token1Address string `json:"token1_address"`
	// Balance of token1
	Token1Balance NullableString `json:"token1_balance,omitempty"`
}

type _PoolInfoSchema PoolInfoSchema

// NewPoolInfoSchema instantiates a new PoolInfoSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolInfoSchema(address string, collectedToken0ProtocolFee string, collectedToken1ProtocolFee string, deprecated bool, lpFee string, lpTotalSupply string, protocolFee string, protocolFeeAddress string, refFee string, reserve0 string, reserve1 string, routerAddress string, token0Address string, token1Address string) *PoolInfoSchema {
	this := PoolInfoSchema{}
	this.Address = address
	this.CollectedToken0ProtocolFee = collectedToken0ProtocolFee
	this.CollectedToken1ProtocolFee = collectedToken1ProtocolFee
	this.Deprecated = deprecated
	this.LpFee = lpFee
	this.LpTotalSupply = lpTotalSupply
	this.ProtocolFee = protocolFee
	this.ProtocolFeeAddress = protocolFeeAddress
	this.RefFee = refFee
	this.Reserve0 = reserve0
	this.Reserve1 = reserve1
	this.RouterAddress = routerAddress
	this.Token0Address = token0Address
	this.Token1Address = token1Address
	return &this
}

// NewPoolInfoSchemaWithDefaults instantiates a new PoolInfoSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolInfoSchemaWithDefaults() *PoolInfoSchema {
	this := PoolInfoSchema{}
	return &this
}

// GetAddress returns the Address field value
func (o *PoolInfoSchema) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PoolInfoSchema) SetAddress(v string) {
	o.Address = v
}

// GetApy1d returns the Apy1d field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetApy1d() string {
	if o == nil || IsNil(o.Apy1d.Get()) {
		var ret string
		return ret
	}
	return *o.Apy1d.Get()
}

// GetApy1dOk returns a tuple with the Apy1d field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetApy1dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Apy1d.Get(), o.Apy1d.IsSet()
}

// HasApy1d returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasApy1d() bool {
	if o != nil && o.Apy1d.IsSet() {
		return true
	}

	return false
}

// SetApy1d gets a reference to the given NullableString and assigns it to the Apy1d field.
func (o *PoolInfoSchema) SetApy1d(v string) {
	o.Apy1d.Set(&v)
}
// SetApy1dNil sets the value for Apy1d to be an explicit nil
func (o *PoolInfoSchema) SetApy1dNil() {
	o.Apy1d.Set(nil)
}

// UnsetApy1d ensures that no value is present for Apy1d, not even an explicit nil
func (o *PoolInfoSchema) UnsetApy1d() {
	o.Apy1d.Unset()
}

// GetApy30d returns the Apy30d field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetApy30d() string {
	if o == nil || IsNil(o.Apy30d.Get()) {
		var ret string
		return ret
	}
	return *o.Apy30d.Get()
}

// GetApy30dOk returns a tuple with the Apy30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetApy30dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Apy30d.Get(), o.Apy30d.IsSet()
}

// HasApy30d returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasApy30d() bool {
	if o != nil && o.Apy30d.IsSet() {
		return true
	}

	return false
}

// SetApy30d gets a reference to the given NullableString and assigns it to the Apy30d field.
func (o *PoolInfoSchema) SetApy30d(v string) {
	o.Apy30d.Set(&v)
}
// SetApy30dNil sets the value for Apy30d to be an explicit nil
func (o *PoolInfoSchema) SetApy30dNil() {
	o.Apy30d.Set(nil)
}

// UnsetApy30d ensures that no value is present for Apy30d, not even an explicit nil
func (o *PoolInfoSchema) UnsetApy30d() {
	o.Apy30d.Unset()
}

// GetApy7d returns the Apy7d field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetApy7d() string {
	if o == nil || IsNil(o.Apy7d.Get()) {
		var ret string
		return ret
	}
	return *o.Apy7d.Get()
}

// GetApy7dOk returns a tuple with the Apy7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetApy7dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Apy7d.Get(), o.Apy7d.IsSet()
}

// HasApy7d returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasApy7d() bool {
	if o != nil && o.Apy7d.IsSet() {
		return true
	}

	return false
}

// SetApy7d gets a reference to the given NullableString and assigns it to the Apy7d field.
func (o *PoolInfoSchema) SetApy7d(v string) {
	o.Apy7d.Set(&v)
}
// SetApy7dNil sets the value for Apy7d to be an explicit nil
func (o *PoolInfoSchema) SetApy7dNil() {
	o.Apy7d.Set(nil)
}

// UnsetApy7d ensures that no value is present for Apy7d, not even an explicit nil
func (o *PoolInfoSchema) UnsetApy7d() {
	o.Apy7d.Unset()
}

// GetCollectedToken0ProtocolFee returns the CollectedToken0ProtocolFee field value
func (o *PoolInfoSchema) GetCollectedToken0ProtocolFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectedToken0ProtocolFee
}

// GetCollectedToken0ProtocolFeeOk returns a tuple with the CollectedToken0ProtocolFee field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetCollectedToken0ProtocolFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectedToken0ProtocolFee, true
}

// SetCollectedToken0ProtocolFee sets field value
func (o *PoolInfoSchema) SetCollectedToken0ProtocolFee(v string) {
	o.CollectedToken0ProtocolFee = v
}

// GetCollectedToken1ProtocolFee returns the CollectedToken1ProtocolFee field value
func (o *PoolInfoSchema) GetCollectedToken1ProtocolFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectedToken1ProtocolFee
}

// GetCollectedToken1ProtocolFeeOk returns a tuple with the CollectedToken1ProtocolFee field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetCollectedToken1ProtocolFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectedToken1ProtocolFee, true
}

// SetCollectedToken1ProtocolFee sets field value
func (o *PoolInfoSchema) SetCollectedToken1ProtocolFee(v string) {
	o.CollectedToken1ProtocolFee = v
}

// GetDeprecated returns the Deprecated field value
func (o *PoolInfoSchema) GetDeprecated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deprecated
}

// GetDeprecatedOk returns a tuple with the Deprecated field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetDeprecatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deprecated, true
}

// SetDeprecated sets field value
func (o *PoolInfoSchema) SetDeprecated(v bool) {
	o.Deprecated = v
}

// GetLpAccountAddress returns the LpAccountAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetLpAccountAddress() string {
	if o == nil || IsNil(o.LpAccountAddress.Get()) {
		var ret string
		return ret
	}
	return *o.LpAccountAddress.Get()
}

// GetLpAccountAddressOk returns a tuple with the LpAccountAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetLpAccountAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LpAccountAddress.Get(), o.LpAccountAddress.IsSet()
}

// HasLpAccountAddress returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasLpAccountAddress() bool {
	if o != nil && o.LpAccountAddress.IsSet() {
		return true
	}

	return false
}

// SetLpAccountAddress gets a reference to the given NullableString and assigns it to the LpAccountAddress field.
func (o *PoolInfoSchema) SetLpAccountAddress(v string) {
	o.LpAccountAddress.Set(&v)
}
// SetLpAccountAddressNil sets the value for LpAccountAddress to be an explicit nil
func (o *PoolInfoSchema) SetLpAccountAddressNil() {
	o.LpAccountAddress.Set(nil)
}

// UnsetLpAccountAddress ensures that no value is present for LpAccountAddress, not even an explicit nil
func (o *PoolInfoSchema) UnsetLpAccountAddress() {
	o.LpAccountAddress.Unset()
}

// GetLpBalance returns the LpBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetLpBalance() string {
	if o == nil || IsNil(o.LpBalance.Get()) {
		var ret string
		return ret
	}
	return *o.LpBalance.Get()
}

// GetLpBalanceOk returns a tuple with the LpBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetLpBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LpBalance.Get(), o.LpBalance.IsSet()
}

// HasLpBalance returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasLpBalance() bool {
	if o != nil && o.LpBalance.IsSet() {
		return true
	}

	return false
}

// SetLpBalance gets a reference to the given NullableString and assigns it to the LpBalance field.
func (o *PoolInfoSchema) SetLpBalance(v string) {
	o.LpBalance.Set(&v)
}
// SetLpBalanceNil sets the value for LpBalance to be an explicit nil
func (o *PoolInfoSchema) SetLpBalanceNil() {
	o.LpBalance.Set(nil)
}

// UnsetLpBalance ensures that no value is present for LpBalance, not even an explicit nil
func (o *PoolInfoSchema) UnsetLpBalance() {
	o.LpBalance.Unset()
}

// GetLpFee returns the LpFee field value
func (o *PoolInfoSchema) GetLpFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LpFee
}

// GetLpFeeOk returns a tuple with the LpFee field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetLpFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LpFee, true
}

// SetLpFee sets field value
func (o *PoolInfoSchema) SetLpFee(v string) {
	o.LpFee = v
}

// GetLpPriceUsd returns the LpPriceUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetLpPriceUsd() string {
	if o == nil || IsNil(o.LpPriceUsd.Get()) {
		var ret string
		return ret
	}
	return *o.LpPriceUsd.Get()
}

// GetLpPriceUsdOk returns a tuple with the LpPriceUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetLpPriceUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LpPriceUsd.Get(), o.LpPriceUsd.IsSet()
}

// HasLpPriceUsd returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasLpPriceUsd() bool {
	if o != nil && o.LpPriceUsd.IsSet() {
		return true
	}

	return false
}

// SetLpPriceUsd gets a reference to the given NullableString and assigns it to the LpPriceUsd field.
func (o *PoolInfoSchema) SetLpPriceUsd(v string) {
	o.LpPriceUsd.Set(&v)
}
// SetLpPriceUsdNil sets the value for LpPriceUsd to be an explicit nil
func (o *PoolInfoSchema) SetLpPriceUsdNil() {
	o.LpPriceUsd.Set(nil)
}

// UnsetLpPriceUsd ensures that no value is present for LpPriceUsd, not even an explicit nil
func (o *PoolInfoSchema) UnsetLpPriceUsd() {
	o.LpPriceUsd.Unset()
}

// GetLpTotalSupply returns the LpTotalSupply field value
func (o *PoolInfoSchema) GetLpTotalSupply() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LpTotalSupply
}

// GetLpTotalSupplyOk returns a tuple with the LpTotalSupply field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetLpTotalSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LpTotalSupply, true
}

// SetLpTotalSupply sets field value
func (o *PoolInfoSchema) SetLpTotalSupply(v string) {
	o.LpTotalSupply = v
}

// GetLpTotalSupplyUsd returns the LpTotalSupplyUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetLpTotalSupplyUsd() string {
	if o == nil || IsNil(o.LpTotalSupplyUsd.Get()) {
		var ret string
		return ret
	}
	return *o.LpTotalSupplyUsd.Get()
}

// GetLpTotalSupplyUsdOk returns a tuple with the LpTotalSupplyUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetLpTotalSupplyUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LpTotalSupplyUsd.Get(), o.LpTotalSupplyUsd.IsSet()
}

// HasLpTotalSupplyUsd returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasLpTotalSupplyUsd() bool {
	if o != nil && o.LpTotalSupplyUsd.IsSet() {
		return true
	}

	return false
}

// SetLpTotalSupplyUsd gets a reference to the given NullableString and assigns it to the LpTotalSupplyUsd field.
func (o *PoolInfoSchema) SetLpTotalSupplyUsd(v string) {
	o.LpTotalSupplyUsd.Set(&v)
}
// SetLpTotalSupplyUsdNil sets the value for LpTotalSupplyUsd to be an explicit nil
func (o *PoolInfoSchema) SetLpTotalSupplyUsdNil() {
	o.LpTotalSupplyUsd.Set(nil)
}

// UnsetLpTotalSupplyUsd ensures that no value is present for LpTotalSupplyUsd, not even an explicit nil
func (o *PoolInfoSchema) UnsetLpTotalSupplyUsd() {
	o.LpTotalSupplyUsd.Unset()
}

// GetLpWalletAddress returns the LpWalletAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetLpWalletAddress() string {
	if o == nil || IsNil(o.LpWalletAddress.Get()) {
		var ret string
		return ret
	}
	return *o.LpWalletAddress.Get()
}

// GetLpWalletAddressOk returns a tuple with the LpWalletAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetLpWalletAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LpWalletAddress.Get(), o.LpWalletAddress.IsSet()
}

// HasLpWalletAddress returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasLpWalletAddress() bool {
	if o != nil && o.LpWalletAddress.IsSet() {
		return true
	}

	return false
}

// SetLpWalletAddress gets a reference to the given NullableString and assigns it to the LpWalletAddress field.
func (o *PoolInfoSchema) SetLpWalletAddress(v string) {
	o.LpWalletAddress.Set(&v)
}
// SetLpWalletAddressNil sets the value for LpWalletAddress to be an explicit nil
func (o *PoolInfoSchema) SetLpWalletAddressNil() {
	o.LpWalletAddress.Set(nil)
}

// UnsetLpWalletAddress ensures that no value is present for LpWalletAddress, not even an explicit nil
func (o *PoolInfoSchema) UnsetLpWalletAddress() {
	o.LpWalletAddress.Unset()
}

// GetProtocolFee returns the ProtocolFee field value
func (o *PoolInfoSchema) GetProtocolFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProtocolFee
}

// GetProtocolFeeOk returns a tuple with the ProtocolFee field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetProtocolFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolFee, true
}

// SetProtocolFee sets field value
func (o *PoolInfoSchema) SetProtocolFee(v string) {
	o.ProtocolFee = v
}

// GetProtocolFeeAddress returns the ProtocolFeeAddress field value
func (o *PoolInfoSchema) GetProtocolFeeAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProtocolFeeAddress
}

// GetProtocolFeeAddressOk returns a tuple with the ProtocolFeeAddress field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetProtocolFeeAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolFeeAddress, true
}

// SetProtocolFeeAddress sets field value
func (o *PoolInfoSchema) SetProtocolFeeAddress(v string) {
	o.ProtocolFeeAddress = v
}

// GetRefFee returns the RefFee field value
func (o *PoolInfoSchema) GetRefFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefFee
}

// GetRefFeeOk returns a tuple with the RefFee field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetRefFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefFee, true
}

// SetRefFee sets field value
func (o *PoolInfoSchema) SetRefFee(v string) {
	o.RefFee = v
}

// GetReserve0 returns the Reserve0 field value
func (o *PoolInfoSchema) GetReserve0() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reserve0
}

// GetReserve0Ok returns a tuple with the Reserve0 field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetReserve0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reserve0, true
}

// SetReserve0 sets field value
func (o *PoolInfoSchema) SetReserve0(v string) {
	o.Reserve0 = v
}

// GetReserve1 returns the Reserve1 field value
func (o *PoolInfoSchema) GetReserve1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reserve1
}

// GetReserve1Ok returns a tuple with the Reserve1 field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetReserve1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reserve1, true
}

// SetReserve1 sets field value
func (o *PoolInfoSchema) SetReserve1(v string) {
	o.Reserve1 = v
}

// GetRouterAddress returns the RouterAddress field value
func (o *PoolInfoSchema) GetRouterAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RouterAddress
}

// GetRouterAddressOk returns a tuple with the RouterAddress field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetRouterAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RouterAddress, true
}

// SetRouterAddress sets field value
func (o *PoolInfoSchema) SetRouterAddress(v string) {
	o.RouterAddress = v
}

// GetToken0Address returns the Token0Address field value
func (o *PoolInfoSchema) GetToken0Address() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token0Address
}

// GetToken0AddressOk returns a tuple with the Token0Address field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetToken0AddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token0Address, true
}

// SetToken0Address sets field value
func (o *PoolInfoSchema) SetToken0Address(v string) {
	o.Token0Address = v
}

// GetToken0Balance returns the Token0Balance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetToken0Balance() string {
	if o == nil || IsNil(o.Token0Balance.Get()) {
		var ret string
		return ret
	}
	return *o.Token0Balance.Get()
}

// GetToken0BalanceOk returns a tuple with the Token0Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetToken0BalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token0Balance.Get(), o.Token0Balance.IsSet()
}

// HasToken0Balance returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasToken0Balance() bool {
	if o != nil && o.Token0Balance.IsSet() {
		return true
	}

	return false
}

// SetToken0Balance gets a reference to the given NullableString and assigns it to the Token0Balance field.
func (o *PoolInfoSchema) SetToken0Balance(v string) {
	o.Token0Balance.Set(&v)
}
// SetToken0BalanceNil sets the value for Token0Balance to be an explicit nil
func (o *PoolInfoSchema) SetToken0BalanceNil() {
	o.Token0Balance.Set(nil)
}

// UnsetToken0Balance ensures that no value is present for Token0Balance, not even an explicit nil
func (o *PoolInfoSchema) UnsetToken0Balance() {
	o.Token0Balance.Unset()
}

// GetToken1Address returns the Token1Address field value
func (o *PoolInfoSchema) GetToken1Address() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token1Address
}

// GetToken1AddressOk returns a tuple with the Token1Address field value
// and a boolean to check if the value has been set.
func (o *PoolInfoSchema) GetToken1AddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token1Address, true
}

// SetToken1Address sets field value
func (o *PoolInfoSchema) SetToken1Address(v string) {
	o.Token1Address = v
}

// GetToken1Balance returns the Token1Balance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolInfoSchema) GetToken1Balance() string {
	if o == nil || IsNil(o.Token1Balance.Get()) {
		var ret string
		return ret
	}
	return *o.Token1Balance.Get()
}

// GetToken1BalanceOk returns a tuple with the Token1Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolInfoSchema) GetToken1BalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token1Balance.Get(), o.Token1Balance.IsSet()
}

// HasToken1Balance returns a boolean if a field has been set.
func (o *PoolInfoSchema) HasToken1Balance() bool {
	if o != nil && o.Token1Balance.IsSet() {
		return true
	}

	return false
}

// SetToken1Balance gets a reference to the given NullableString and assigns it to the Token1Balance field.
func (o *PoolInfoSchema) SetToken1Balance(v string) {
	o.Token1Balance.Set(&v)
}
// SetToken1BalanceNil sets the value for Token1Balance to be an explicit nil
func (o *PoolInfoSchema) SetToken1BalanceNil() {
	o.Token1Balance.Set(nil)
}

// UnsetToken1Balance ensures that no value is present for Token1Balance, not even an explicit nil
func (o *PoolInfoSchema) UnsetToken1Balance() {
	o.Token1Balance.Unset()
}

func (o PoolInfoSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolInfoSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	if o.Apy1d.IsSet() {
		toSerialize["apy_1d"] = o.Apy1d.Get()
	}
	if o.Apy30d.IsSet() {
		toSerialize["apy_30d"] = o.Apy30d.Get()
	}
	if o.Apy7d.IsSet() {
		toSerialize["apy_7d"] = o.Apy7d.Get()
	}
	toSerialize["collected_token0_protocol_fee"] = o.CollectedToken0ProtocolFee
	toSerialize["collected_token1_protocol_fee"] = o.CollectedToken1ProtocolFee
	toSerialize["deprecated"] = o.Deprecated
	if o.LpAccountAddress.IsSet() {
		toSerialize["lp_account_address"] = o.LpAccountAddress.Get()
	}
	if o.LpBalance.IsSet() {
		toSerialize["lp_balance"] = o.LpBalance.Get()
	}
	toSerialize["lp_fee"] = o.LpFee
	if o.LpPriceUsd.IsSet() {
		toSerialize["lp_price_usd"] = o.LpPriceUsd.Get()
	}
	toSerialize["lp_total_supply"] = o.LpTotalSupply
	if o.LpTotalSupplyUsd.IsSet() {
		toSerialize["lp_total_supply_usd"] = o.LpTotalSupplyUsd.Get()
	}
	if o.LpWalletAddress.IsSet() {
		toSerialize["lp_wallet_address"] = o.LpWalletAddress.Get()
	}
	toSerialize["protocol_fee"] = o.ProtocolFee
	toSerialize["protocol_fee_address"] = o.ProtocolFeeAddress
	toSerialize["ref_fee"] = o.RefFee
	toSerialize["reserve0"] = o.Reserve0
	toSerialize["reserve1"] = o.Reserve1
	toSerialize["router_address"] = o.RouterAddress
	toSerialize["token0_address"] = o.Token0Address
	if o.Token0Balance.IsSet() {
		toSerialize["token0_balance"] = o.Token0Balance.Get()
	}
	toSerialize["token1_address"] = o.Token1Address
	if o.Token1Balance.IsSet() {
		toSerialize["token1_balance"] = o.Token1Balance.Get()
	}
	return toSerialize, nil
}

func (o *PoolInfoSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"collected_token0_protocol_fee",
		"collected_token1_protocol_fee",
		"deprecated",
		"lp_fee",
		"lp_total_supply",
		"protocol_fee",
		"protocol_fee_address",
		"ref_fee",
		"reserve0",
		"reserve1",
		"router_address",
		"token0_address",
		"token1_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPoolInfoSchema := _PoolInfoSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPoolInfoSchema)

	if err != nil {
		return err
	}

	*o = PoolInfoSchema(varPoolInfoSchema)

	return err
}

type NullablePoolInfoSchema struct {
	value *PoolInfoSchema
	isSet bool
}

func (v NullablePoolInfoSchema) Get() *PoolInfoSchema {
	return v.value
}

func (v *NullablePoolInfoSchema) Set(val *PoolInfoSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolInfoSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolInfoSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolInfoSchema(val *PoolInfoSchema) *NullablePoolInfoSchema {
	return &NullablePoolInfoSchema{value: val, isSet: true}
}

func (v NullablePoolInfoSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolInfoSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


