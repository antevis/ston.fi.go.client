/*
ston-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetFarmList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFarmList200Response{}

// GetFarmList200Response struct for GetFarmList200Response
type GetFarmList200Response struct {
	FarmList []FarmInfoSchema `json:"farm_list"`
}

type _GetFarmList200Response GetFarmList200Response

// NewGetFarmList200Response instantiates a new GetFarmList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFarmList200Response(farmList []FarmInfoSchema) *GetFarmList200Response {
	this := GetFarmList200Response{}
	this.FarmList = farmList
	return &this
}

// NewGetFarmList200ResponseWithDefaults instantiates a new GetFarmList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFarmList200ResponseWithDefaults() *GetFarmList200Response {
	this := GetFarmList200Response{}
	return &this
}

// GetFarmList returns the FarmList field value
func (o *GetFarmList200Response) GetFarmList() []FarmInfoSchema {
	if o == nil {
		var ret []FarmInfoSchema
		return ret
	}

	return o.FarmList
}

// GetFarmListOk returns a tuple with the FarmList field value
// and a boolean to check if the value has been set.
func (o *GetFarmList200Response) GetFarmListOk() ([]FarmInfoSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.FarmList, true
}

// SetFarmList sets field value
func (o *GetFarmList200Response) SetFarmList(v []FarmInfoSchema) {
	o.FarmList = v
}

func (o GetFarmList200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFarmList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["farm_list"] = o.FarmList
	return toSerialize, nil
}

func (o *GetFarmList200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"farm_list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetFarmList200Response := _GetFarmList200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetFarmList200Response)

	if err != nil {
		return err
	}

	*o = GetFarmList200Response(varGetFarmList200Response)

	return err
}

type NullableGetFarmList200Response struct {
	value *GetFarmList200Response
	isSet bool
}

func (v NullableGetFarmList200Response) Get() *GetFarmList200Response {
	return v.value
}

func (v *NullableGetFarmList200Response) Set(val *GetFarmList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFarmList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFarmList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFarmList200Response(val *GetFarmList200Response) *NullableGetFarmList200Response {
	return &NullableGetFarmList200Response{value: val, isSet: true}
}

func (v NullableGetFarmList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFarmList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


