/*
ston-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetPoolStats200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPoolStats200Response{}

// GetPoolStats200Response struct for GetPoolStats200Response
type GetPoolStats200Response struct {
	// Time since the stats are requested (YYYY-MM-DDTHH:MM:SS)
	Since string `json:"since"`
	// Stats of each pool
	Stats []PoolStats `json:"stats"`
	// Number of unique wallets operated in pool
	UniqueWalletsCount int64 `json:"unique_wallets_count"`
	// Time until the stats are requested (YYYY-MM-DDTHH:MM:SS)
	Until string `json:"until"`
}

type _GetPoolStats200Response GetPoolStats200Response

// NewGetPoolStats200Response instantiates a new GetPoolStats200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPoolStats200Response(since string, stats []PoolStats, uniqueWalletsCount int64, until string) *GetPoolStats200Response {
	this := GetPoolStats200Response{}
	this.Since = since
	this.Stats = stats
	this.UniqueWalletsCount = uniqueWalletsCount
	this.Until = until
	return &this
}

// NewGetPoolStats200ResponseWithDefaults instantiates a new GetPoolStats200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPoolStats200ResponseWithDefaults() *GetPoolStats200Response {
	this := GetPoolStats200Response{}
	return &this
}

// GetSince returns the Since field value
func (o *GetPoolStats200Response) GetSince() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Since
}

// GetSinceOk returns a tuple with the Since field value
// and a boolean to check if the value has been set.
func (o *GetPoolStats200Response) GetSinceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Since, true
}

// SetSince sets field value
func (o *GetPoolStats200Response) SetSince(v string) {
	o.Since = v
}

// GetStats returns the Stats field value
func (o *GetPoolStats200Response) GetStats() []PoolStats {
	if o == nil {
		var ret []PoolStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *GetPoolStats200Response) GetStatsOk() ([]PoolStats, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stats, true
}

// SetStats sets field value
func (o *GetPoolStats200Response) SetStats(v []PoolStats) {
	o.Stats = v
}

// GetUniqueWalletsCount returns the UniqueWalletsCount field value
func (o *GetPoolStats200Response) GetUniqueWalletsCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UniqueWalletsCount
}

// GetUniqueWalletsCountOk returns a tuple with the UniqueWalletsCount field value
// and a boolean to check if the value has been set.
func (o *GetPoolStats200Response) GetUniqueWalletsCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UniqueWalletsCount, true
}

// SetUniqueWalletsCount sets field value
func (o *GetPoolStats200Response) SetUniqueWalletsCount(v int64) {
	o.UniqueWalletsCount = v
}

// GetUntil returns the Until field value
func (o *GetPoolStats200Response) GetUntil() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Until
}

// GetUntilOk returns a tuple with the Until field value
// and a boolean to check if the value has been set.
func (o *GetPoolStats200Response) GetUntilOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Until, true
}

// SetUntil sets field value
func (o *GetPoolStats200Response) SetUntil(v string) {
	o.Until = v
}

func (o GetPoolStats200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPoolStats200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["since"] = o.Since
	toSerialize["stats"] = o.Stats
	toSerialize["unique_wallets_count"] = o.UniqueWalletsCount
	toSerialize["until"] = o.Until
	return toSerialize, nil
}

func (o *GetPoolStats200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"since",
		"stats",
		"unique_wallets_count",
		"until",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPoolStats200Response := _GetPoolStats200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPoolStats200Response)

	if err != nil {
		return err
	}

	*o = GetPoolStats200Response(varGetPoolStats200Response)

	return err
}

type NullableGetPoolStats200Response struct {
	value *GetPoolStats200Response
	isSet bool
}

func (v NullableGetPoolStats200Response) Get() *GetPoolStats200Response {
	return v.value
}

func (v *NullableGetPoolStats200Response) Set(val *GetPoolStats200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPoolStats200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPoolStats200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPoolStats200Response(val *GetPoolStats200Response) *NullableGetPoolStats200Response {
	return &NullableGetPoolStats200Response{value: val, isSet: true}
}

func (v NullableGetPoolStats200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPoolStats200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


