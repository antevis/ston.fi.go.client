/*
ston-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetPoolList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPoolList200Response{}

// GetPoolList200Response struct for GetPoolList200Response
type GetPoolList200Response struct {
	PoolList []PoolInfoSchema `json:"pool_list"`
}

type _GetPoolList200Response GetPoolList200Response

// NewGetPoolList200Response instantiates a new GetPoolList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPoolList200Response(poolList []PoolInfoSchema) *GetPoolList200Response {
	this := GetPoolList200Response{}
	this.PoolList = poolList
	return &this
}

// NewGetPoolList200ResponseWithDefaults instantiates a new GetPoolList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPoolList200ResponseWithDefaults() *GetPoolList200Response {
	this := GetPoolList200Response{}
	return &this
}

// GetPoolList returns the PoolList field value
func (o *GetPoolList200Response) GetPoolList() []PoolInfoSchema {
	if o == nil {
		var ret []PoolInfoSchema
		return ret
	}

	return o.PoolList
}

// GetPoolListOk returns a tuple with the PoolList field value
// and a boolean to check if the value has been set.
func (o *GetPoolList200Response) GetPoolListOk() ([]PoolInfoSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolList, true
}

// SetPoolList sets field value
func (o *GetPoolList200Response) SetPoolList(v []PoolInfoSchema) {
	o.PoolList = v
}

func (o GetPoolList200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPoolList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pool_list"] = o.PoolList
	return toSerialize, nil
}

func (o *GetPoolList200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pool_list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPoolList200Response := _GetPoolList200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPoolList200Response)

	if err != nil {
		return err
	}

	*o = GetPoolList200Response(varGetPoolList200Response)

	return err
}

type NullableGetPoolList200Response struct {
	value *GetPoolList200Response
	isSet bool
}

func (v NullableGetPoolList200Response) Get() *GetPoolList200Response {
	return v.value
}

func (v *NullableGetPoolList200Response) Set(val *GetPoolList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPoolList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPoolList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPoolList200Response(val *GetPoolList200Response) *NullableGetPoolList200Response {
	return &NullableGetPoolList200Response{value: val, isSet: true}
}

func (v NullableGetPoolList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPoolList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


